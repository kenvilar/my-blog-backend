{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/article-content.js","components/ArticlesList.js","pages/ArticlesListPage.js","pages/NotFoundPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/ArticlePage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","AboutPage","articleContent","name","title","content","ArticlesList","articles","map","article","key","to","className","substring","ArticlesListPage","NotFoundPage","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","htmlFor","type","value","onChange","event","target","cols","rows","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","otherArticles","filter","paragraph","NavBar","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+PAiBeA,EAfE,kBACf,oCACE,0DACA,8dCYWC,EAfG,kBAChB,oCACE,wCACA,8dCwCWC,EA7CQ,CACrB,CACEC,KAAM,cACNC,MAAO,iCACPC,QAAS,CAAC,gPAAD,mgBAcX,CACEF,KAAM,gBACNC,MAAO,mCACPC,QAAS,CAAC,mgBAUZ,CACEF,KAAM,YACNC,MAAO,iCACPC,QAAS,CAAC,wcCnBCC,EAZM,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACnB,oCACGA,EAASC,KAAI,SAACC,EAASC,GAAV,OACZ,kBAAC,IAAD,CAAMC,GAAE,mBAAcF,EAAQN,MAAQO,IAAKA,EACrCE,UAAU,qBACd,4BAAKH,EAAQL,OACb,2BAAIK,EAAQJ,QAAQ,GAAGQ,UAAU,EAAG,KAApC,aCEOC,EAPU,kBACvB,oCACE,wCACA,kBAAC,EAAD,CAAcP,SAAUL,M,+BCCba,EANM,kBACnB,oCACE,qDCUWC,EAZM,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACnB,oCACE,wCACCA,EAAST,KAAI,SAACU,EAASR,GAAV,OACZ,yBAAKE,UAAU,UAAUF,IAAKA,GAC5B,4BAAKQ,EAAQC,UACb,2BAAID,EAAQE,YCaLC,EAnBQ,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,eACvCC,EAAa,uCAAG,8BAAAC,EAAA,sEACCC,MAAM,iBAAD,OAAkBL,EAAlB,WAAwC,CAChEM,OAAQ,SAFU,cACdC,EADc,gBAIDA,EAAOC,OAJN,OAIdC,EAJc,OAKpBP,EAAeO,GALK,2CAAH,qDAQnB,OACE,oCACE,yBAAKC,GAAG,mBACN,4BAAQC,QAAS,kBAAMR,MAAvB,cACA,yDAA+BF,EAA/B,cCyBOW,EAtCQ,SAAC,GAAmC,IAAlCZ,EAAiC,EAAjCA,YAAaE,EAAoB,EAApBA,eAAoB,EACxBW,mBAAS,IADe,mBACjDhB,EADiD,KACvCiB,EADuC,OAElBD,mBAAS,IAFS,mBAEjDE,EAFiD,KAEpCC,EAFoC,KAIlDC,EAAU,uCAAG,8BAAAb,EAAA,sEACIC,MAAM,iBAAD,OAAkBL,EAAlB,gBAA6C,CACrEM,OAAQ,OACRG,KAAMS,KAAKC,UAAU,CAACtB,WAAUC,KAAMiB,IACtCK,QAAS,CACP,eAAgB,sBALH,cACXb,EADW,gBAQEA,EAAOC,OART,OAQXC,EARW,OASjBP,EAAeO,GACfK,EAAY,IACZE,EAAe,IAXE,2CAAH,qDAchB,OACE,oCACE,yBAAKN,GAAG,oBACN,6CACA,2BAAOW,QAAQ,IAAf,QAEE,2BAAOC,KAAK,OAAOC,MAAO1B,EACnB2B,SAAU,SAAAC,GAAK,OAAIX,EAAYW,EAAMC,OAAOH,WAErD,2BAAOF,QAAQ,IAAf,WAEE,8BAAUM,KAAK,KAAKC,KAAK,IAAIL,MAAOR,EAC1BS,SAAU,SAAAC,GAAK,OAAIT,EAAeS,EAAMC,OAAOH,WAE3D,4BAAQZ,QAAS,kBAAMM,MAAvB,kBCSOY,EAnCK,SAAC,GAAa,IAC1BhD,EADyB,EAAXiD,MACDC,OAAOlD,KACpBM,EAAUP,EAAeoD,MAAK,SAAA7C,GAAO,OAAIA,EAAQN,OAASA,KAFjC,EAIOgC,mBAAS,CAACZ,QAAS,EAAGN,SAAU,KAJvC,mBAIxBsC,EAJwB,KAIX/B,EAJW,KAe/B,GATAgC,qBAAU,YACO,uCAAG,8BAAA9B,EAAA,sEACKC,MAAM,iBAAD,OAAkBxB,IAD5B,cACV0B,EADU,gBAEGA,EAAOC,OAFV,OAEVC,EAFU,OAGhBP,EAAeO,GAHC,2CAAH,qDAKf0B,KACC,CAACtD,KAECM,EAAS,OAAO,kBAAC,EAAD,MAErB,IAAMiD,EAAgBxD,EAAeyD,QAAO,SAAAlD,GAAO,OAAIA,EAAQN,OAASA,KAExE,OACE,oCACE,4BAAKM,EAAQL,OACb,kBAAC,EAAD,CAAgBkB,YAAanB,EAAMoB,QAASgC,EAAYhC,QACxCC,eAAgBA,IAC/Bf,EAAQJ,QAAQG,KAAI,SAACoD,EAAWlD,GAAZ,OACnB,uBAAGA,IAAKA,GAAMkD,MAEhB,kBAAC,EAAD,CAAc3C,SAAUsC,EAAYtC,WACpC,kBAAC,EAAD,CAAgBK,YAAanB,EAAMqB,eAAgBA,IACnD,+CACA,kBAAC,EAAD,CAAcjB,SAAUmD,MCnBfG,EAhBA,kBACb,6BACE,4BACE,4BACE,kBAAC,IAAD,CAAMlD,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,kBAAT,gB,MCoBOmD,MAnBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKlD,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKoB,GAAG,aACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+B,KAAK,IAAIC,UAAWhE,EAAUiE,OAAK,IAC1C,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAW/D,IAChC,kBAAC,IAAD,CAAO8D,KAAK,iBAAiBC,UAAWlD,IACxC,kBAAC,IAAD,CAAOiD,KAAK,iBAAiBC,UAAWb,IACxC,kBAAC,IAAD,CAAOa,UAAWjD,SCbVmD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjB,MACvB,2DCXNkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d9383791.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n  <>\n    <h1>Hello, welcome to my blog!</h1>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n      veniam, quis nostrud exercitation ullamco\n      laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n      reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n      pariatur.\n      Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n      deserunt mollit anim id est laborum.\n    </p>\n  </>\n);\n\nexport default HomePage;\n","import React from 'react';\n\nconst AboutPage = () => (\n  <>\n    <h1>About Me</h1>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n      veniam, quis nostrud exercitation ullamco\n      laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n      reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n      pariatur.\n      Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n      deserunt mollit anim id est laborum.\n    </p>\n  </>\n);\n\nexport default AboutPage;\n","const articleContent = [\n  {\n    name: 'learn-react',\n    title: 'The Fastest Way to Learn React',\n    content: [\n      `Blogs are essential for every business. At Content Customs, our \n      professional content writers know exactly how to create the blog posts you \n      need to achieve your business goals and get more traffic, leads and \n      sales.`,\n      `Since the beginning of the internet, millions and millions and millions \n      of blogs have been created. Many have died due to lost interest or their \n      owners giving up on the idea, while others have thrived and continue to \n      grow, making money and earning their owners a steady income. It’s a \n      constant evolution of content that keeps people coming back for more, \n      especially if these blogs contact highly resourceful material that people \n      find useful and interesting.`,\n    ],\n  },\n  {\n    name: 'learn-angular',\n    title: 'The Fastest Way to Learn Angular',\n    content: [\n      `Since the beginning of the internet, millions and millions and millions \n      of blogs have been created. Many have died due to lost interest or their \n      owners giving up on the idea, while others have thrived and continue to \n      grow, making money and earning their owners a steady income. It’s a \n      constant evolution of content that keeps people coming back for more, \n      especially if these blogs contact highly resourceful material that people \n      find useful and interesting.`,\n    ],\n  },\n  {\n    name: 'learn-vue',\n    title: 'The Fastest Way to Learn VueJS',\n    content: [\n      `The great thing about this blog is the conversational tone and the real \n      person behind the brand. I think it’s inspiring to other mums to see \n      someone like them making such a difference in other people’s lives by \n      creating amazingly useful content that is 100% actionable. Also it may \n      inspire mums to set up their own blog and to write about their experiences \n      as a mother and a wife in the 21st century.`,\n    ],\n  },\n];\n\nexport default articleContent;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst ArticlesList = ({articles}) => (\n  <>\n    {articles.map((article, key) => (\n      <Link to={`/article/${article.name}`} key={key}\n            className=\"article-list-item\">\n        <h3>{article.title}</h3>\n        <p>{article.content[0].substring(0, 150)}...</p>\n      </Link>\n    ))}\n  </>\n);\n\nexport default ArticlesList;\n","import React from 'react';\nimport articleContent from './article-content';\nimport ArticlesList from '../components/ArticlesList';\n\nconst ArticlesListPage = () => (\n  <>\n    <h1>Articles</h1>\n    <ArticlesList articles={articleContent}/>\n  </>\n);\n\nexport default ArticlesListPage;\n","import React from 'react';\n\nconst NotFoundPage = () => (\n  <>\n    <h1>404: Page Not Found</h1>\n  </>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\n\nconst CommentsList = ({comments}) => (\n  <>\n    <h3>Comments</h3>\n    {comments.map((comment, key) => (\n      <div className=\"comment\" key={key}>\n        <h4>{comment.username}</h4>\n        <p>{comment.text}</p>\n      </div>\n    ))}\n  </>\n);\n\nexport default CommentsList;\n","import React from 'react';\n\nconst UpvotesSection = ({articleName, upvotes, setArticleInfo}) => {\n  const upvoteArticle = async () => {\n    const result = await fetch(`/api/articles/${articleName}/upvote`, {\n      method: 'post',\n    });\n    const body = await result.json();\n    setArticleInfo(body);\n  };\n\n  return (\n    <>\n      <div id=\"upvotes-section\">\n        <button onClick={() => upvoteArticle()}>Add Upvote</button>\n        <p>This post has been upvoted {upvotes} times.</p>\n      </div>\n    </>\n  );\n};\n\nexport default UpvotesSection;","import React, {useState} from 'react';\n\nconst AddCommentForm = ({articleName, setArticleInfo}) => {\n  const [username, setUsername] = useState('');\n  const [commentText, setCommentText] = useState('');\n\n  const addComment = async () => {\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n      method: 'post',\n      body: JSON.stringify({username, text: commentText}),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const body = await result.json();\n    setArticleInfo(body);\n    setUsername('')\n    setCommentText('')\n  };\n\n  return (\n    <>\n      <div id=\"add-comment-form\">\n        <h3>Add a Comment</h3>\n        <label htmlFor=\"\">\n          Name:\n          <input type=\"text\" value={username}\n                 onChange={event => setUsername(event.target.value)}/>\n        </label>\n        <label htmlFor=\"\">\n          Comment:\n          <textarea cols=\"50\" rows=\"4\" value={commentText}\n                    onChange={event => setCommentText(event.target.value)}/>\n        </label>\n        <button onClick={() => addComment()}>Add Comment</button>\n      </div>\n    </>\n  );\n};\n\nexport default AddCommentForm;\n","import React, {useState, useEffect} from 'react';\nimport articleContent from './article-content';\nimport ArticlesList from '../components/ArticlesList';\nimport NotFoundPage from './NotFoundPage';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport AddCommentForm from '../components/AddCommentForm';\n\nconst ArticlePage = ({match}) => {\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name === name);\n\n  const [articleInfo, setArticleInfo] = useState({upvotes: 0, comments: []});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`);\n      const body = await result.json();\n      setArticleInfo(body);\n    };\n    fetchData();\n  }, [name]);\n\n  if (!article) return <NotFoundPage/>;\n\n  const otherArticles = articleContent.filter(article => article.name !== name);\n\n  return (\n    <>\n      <h1>{article.title}</h1>\n      <UpvotesSection articleName={name} upvotes={articleInfo.upvotes}\n                      setArticleInfo={setArticleInfo}/>\n      {article.content.map((paragraph, key) => (\n        <p key={key}>{paragraph}</p>\n      ))}\n      <CommentsList comments={articleInfo.comments}/>\n      <AddCommentForm articleName={name} setArticleInfo={setArticleInfo}/>\n      <h3>Other Articles:</h3>\n      <ArticlesList articles={otherArticles}/>\n    </>\n  );\n};\n\nexport default ArticlePage;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst NavBar = () => (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/about\">About</Link>\n      </li>\n      <li>\n        <Link to=\"/articles-list\">Articles</Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NavBar from './NavBar';\nimport './App.css';\nimport NotFoundPage from './pages/NotFoundPage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar/>\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact/>\n            <Route path=\"/about\" component={AboutPage}/>\n            <Route path=\"/articles-list\" component={ArticlesListPage}/>\n            <Route path=\"/article/:name\" component={ArticlePage}/>\n            <Route component={NotFoundPage}/>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}